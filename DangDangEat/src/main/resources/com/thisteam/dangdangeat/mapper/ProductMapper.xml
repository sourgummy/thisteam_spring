<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.thisteam.dangdangeat.mapper.ProductMapper">

	<!-- 상품 리스트를 조회하는 SELECT 태그  -->
	<!--주의!! admin_productList도 함께 사용함! 단, 그리드를 사용해 전체검색이 필요하므로
	  if로 목록갯수(listLimit)이 음수일때 전체 검색이 나올 수 있도록 조건 사용함!-->
	<select id="selectProductList" resultType="com.thisteam.dangdangeat.vo.ProductVO" >
		SELECT 
			pro_code
			,pro_name  
			,cate_code
		    ,case
				when pro_brand = '1' then '-'
		        when pro_brand = '2' then 'LILYS KITCHEN'
		        when pro_brand = '3' then 'PETSGREEN'
		        when pro_brand = '4' then 'RICHZ BOX'
				else 'LORENZ'
		    END pro_brand
		    ,pro_option
		    ,pro_qty
		    ,pro_price
		    ,pro_yn
		    ,pro_thumb
		    ,pro_real_thumb
		    ,pro_img
		    ,pro_real_img
		    ,pro_info
		    ,pro_date
		FROM product 
				WHERE 
					pro_name LIKE '%${keyword}%'
					AND cate_code LIKE '%${category}%'
				ORDER BY
					pro_code DESC
					<if test="listLimit gt 0">
				LIMIT  
					#{startRow} , #{listLimit} 
					</if>
	</select>

	<!-- 전체 상품 수 조회하는 select 태그 -->
	<select id="selectProductListCount" resultType="int">
		SELECT 
			COUNT(*)
		FROM product
		WHERE	
			pro_name LIKE '%${keyword}%'
			AND cate_code LIKE '%${category}%'
	</select>
	
	<!-- 상품 상세정보를 조회하는 SELECT 태그  -->
	<select id="selectProductDetail" resultType="com.thisteam.dangdangeat.vo.ProductVO" >
		SELECT 
			pro_code
			,pro_name  
			,cate_code
		    ,case
				when pro_brand = '1' then '-'
		        when pro_brand = '2' then 'LILYS KITCHEN'
		        when pro_brand = '3' then 'PETSGREEN'
		        when pro_brand = '4' then 'RICHZ BOX'
				else 'LORENZ'
		    END pro_brand
		    ,pro_option
		    ,pro_qty
		    ,pro_price
		    ,pro_yn
		    ,pro_thumb
		    ,pro_real_thumb
		    ,pro_img
		    ,pro_real_img
		    ,pro_info
		    ,pro_date
		FROM product 
		WHERE
			pro_code = #{pro_code}
	</select>
	
	<!-- 상품 등록 (insert) -->
	<insert id="insertProduct" >
			INSERT INTO PRODUCT
				(PRO_NAME,
				CATE_CODE,
				PRO_BRAND,
				PRO_OPTION,
				PRO_QTY,
				PRO_PRICE,
				PRO_YN,
				PRO_THUMB,
				PRO_REAL_THUMB,
				PRO_IMG,
				PRO_REAL_IMG,
				PRO_INFO,
				PRO_DATE)
			VALUES(
				#{pro_name}
				,#{cate_code}
				,#{pro_brand}
				,#{pro_option}
				,#{pro_qty}
				,#{pro_price}
				,#{pro_yn}
				,#{pro_thumb}
				,#{pro_real_thumb}
				,#{pro_img}
				,#{pro_real_img}
				,#{pro_name}
				,now()
			)
		</insert>	
		
	<update id="updateProdUpdate">
		UPDATE
			PRODUCT
		SET
			PRO_NAME =  #{pro_name}
			,CATE_CODE =  #{cate_code}
			,PRO_BRAND =  #{pro_brand}
			,PRO_OPTION =  #{pro_option}
			,PRO_QTY =  #{pro_qty}
			,PRO_PRICE =  #{pro_price}
			,PRO_YN =  #{pro_yn}
			<if test='pro_thumb != null and pro_thumb != ""'>
				,PRO_THUMB =  #{pro_thumb}
				,PRO_REAL_THUMB =  #{pro_real_thumb}
			</if>
			<if test='pro_img != null and pro_img != ""'>
				,PRO_IMG =  #{pro_img}
				,PRO_REAL_IMG =  #{pro_real_img}
			</if>
			,PRO_INFO =  #{pro_info}
		WHERE
			PRO_CODE =  #{pro_code}
	</update>	
		
	<delete id="deleteProdDelete">
		DELETE
		FROM
			PRODUCT
		WHERE
			PRO_CODE = #{pro_code}
	</delete>
	<!-- ============== HAWON ============== -->
	<!-- 새상품 목록 가져오기 (main)-->
	<select id="selectNewProduct" resultType="com.thisteam.dangdangeat.vo.ProductVO">
		SELECT  pro_code, pro_name, pro_thumb, pro_real_thumb 
					FROM product 
					 WHERE  pro_yn = 1
					 ORDER BY pro_date DESC
					 LIMIT #{numberOfProducts}
	</select>

	
</mapper>

















